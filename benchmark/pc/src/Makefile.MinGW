#CPU_BITS = 32
CPU_BITS = 64

ifeq ($(CPU_BITS),64)

# SSE2, 64-bit
#ARCH += -march=core2 -mtune=core2 -m64
# AVX, 64-bit
#ARCH += -march=core2 -mtune=generic -msse4.2 -mpopcnt -maes -mpclmul -mavx -m64
# AVX+FMA, 64-bit
#ARCH += -march=core2 -mtune=generic -msse4.2 -mpopcnt -maes -mpclmul -mavx -mfma -m64
# AVX2+FMA, 64-bit
#ARCH += -march=core2 -mtune=generic -msse4.2 -mpopcnt -maes -mpclmul -mavx -mfma -mavx2 -m64

else

# 32-bit, no SIMD
#ARCH += -m32 -mno-sse
# SSE2, 32-bit
#ARCH += -march=core2 -mtune=core2 -m32
# AVX, 32-bit
#ARCH += -march=core2 -mtune=generic -msse4.2 -mpopcnt -maes -mpclmul -mavx -m32
# AVX+FMA, 32-bit
#ARCH += -march=core2 -mtune=generic -msse4.2 -mpopcnt -maes -mpclmul -mavx -mfma -m32

endif

ifeq ($(CPU_BITS),64)
CC = x86_64-w64-mingw32-gcc
CXX = x86_64-w64-mingw32-g++
else
CC = i686-w64-mingw32-gcc
CXX = i686-w64-mingw32-g++
endif

BOINC_DIR = ../../boinc$(CPU_BITS)/
BOINC_API_DIR = $(BOINC_DIR)/include/boinc
BOINC_LIB_DIR = $(BOINC_DIR)/lib
BOINC_ZIP_DIR = $(BOINC_DIR)/zip
BOINC_LIBS = $(BOINC_LIB_DIR)/libboinc_api.a $(BOINC_LIB_DIR)/libboinc.a

#BOINC_API_DIR = $(BOINC_DIR)/api
#BOINC_LIB_DIR = $(BOINC_DIR)/lib
#BOINC_ZIP_DIR = $(BOINC_DIR)/zip
#BOINC_LIBS = $(BOINC_API_DIR)/libboinc_api.a $(BOINC_LIB_DIR)/libboinc.a

BZ2_DIR = ../../bz2_$(CPU_BITS)/


ifdef BOINC_STUB
BOINC_DIR = ../boinc_stub
BOINC_LIBS = 
BOINC_API_DIR = $(BOINC_DIR)/api
endif

FREETYPE_DIR = /usr/include/freetype2
CFLAGS = -c -O3 $(ARCH) -Wall -Wextra -pedantic -Werror $(VARIANTFLAGS) -I$(BOINC_DIR) -I$(BOINC_LIB_DIR) -I$(BOINC_API_DIR) -I$(BOINC_ZIP_DIR) -I$(FREETYPE_DIR) -Isimd -I$(BZ2_DIR) -MMD -MP
CXXFLAGS = $(CFLAGS) -std=c++11
LDFLAGS = $(ARCH) -L/usr/X11R6/lib -L.
LIBS = -static-libgcc -static-libstdc++ -static -pthread $(BZ2_DIR)/libbz2.a
CXXSOURCES = BoincFile.cpp Graph.cpp boinc_functions.cpp utility.cpp pc.cpp main.cpp
CSOURCES = erf.c
OBJECTS = $(CXXSOURCES:.cpp=.o) $(CSOURCES:.c=.o)
EXECUTABLE = ../bin/pc.exe

all: $(EXECUTABLE)
	
$(EXECUTABLE): $(OBJECTS)
	$(CXX) $(LDFLAGS) $(OBJECTS) -o $@ $(LIBS) $(BOINC_LIBS)

.cpp.o:
	$(CXX) $(CXXFLAGS) $< -o $@

.c.o:
	$(CC) $(CFLAGS) $< -o $@

clean:
	rm -rf ../bin/$(EXECUTABLE) *.o *~ *.d

.PHONY: all clean

-include $(CXXSOURCES:.cpp=.d) $(CSOURCES:.c=.d)
